# frontend/nginx.conf

# This Nginx server block serves your Vue.js application
# and proxies API calls to your backend service.
server {
    # Nginx listens on port 80 inside the container,
    # which is mapped to port 3000 on the host by docker-compose.
    listen 80;

    # Define the server names that Nginx will respond to.
    # 'localhost' for local development access, 'stockifyai.net' for your domain.
    server_name localhost stockifyai.net;

    # Root directory for your static frontend files (Vue.js build output).
    # This path must match where your Dockerfile copies the built Vue app.
    root /usr/share/nginx/html;

    # Default index files to serve when a directory is requested.
    index index.html index.htm;

    # Main location block for serving the Single Page Application (SPA).
    location / {
        # try_files attempts to serve static files first:
        # 1. $uri: Tries to find a file matching the exact URI (e.g., /css/app.css).
        # 2. $uri/: Tries to find a directory matching the URI (e.g., /images/ -> /images/index.html).
        # 3. /index.html: If neither a file nor a directory is found, it falls back to serving index.html.
        #    This is CRITICAL for Vue Router's history mode to work correctly,
        #    allowing client-side routing for paths like /stocks or /home.
        try_files $uri $uri/ /index.html;
    }

    # Location block for proxying API requests to the backend service.
    # Requests starting with /api (e.g., /api/sentiments) will be forwarded.
    location /api {
        # proxy_pass forwards the request to the 'backend' service.
        # 'backend' is the service name from your docker-compose.yml,
        # and '8001' is the port your Java backend application listens on INSIDE its container.
        proxy_pass http://backend:8001;

        # Forward standard HTTP headers to the backend for correct request context.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Increase timeouts if your backend has long-running operations.
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Location block for proxying Google OAuth authentication initiation.
    # Requests to /auth/google will go to the backend.
    location /auth/google {
        proxy_pass http://backend:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Location block for proxying the logout endpoint.
    location /logout {
        proxy_pass http://backend:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Location block for proxying the /me endpoint (user info).
    location /me {
        proxy_pass http://backend:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # You can add more specific location blocks here for other backend endpoints
    # that your frontend directly calls (e.g., /api/saveUser, /api/followStock)
    # if they are not already covered by the /api block.
    # However, since you have a /api catch-all, these might not be strictly necessary
    # unless you need different proxy settings for them.
}
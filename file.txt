# setup_data.py
import relationalai as rai

# 1. Configure Snowflake Connection
print("Configuring Snowflake connection...")
rai.save_config("""
active_profile = "ecosystem"

[profile.ecosystem]
user = "sam_avramov"
password = "BCYkCryq8SnQw7y"
engine = "sam"
role = "team_arq"
warehouse = "arq_wh"
platform = "snowflake"
authenticator = "username_password_mfa"
rai_app_name = "RELATIONALAI"
passcode = "" # leave blank
account = "NDSOEBE-RAI_DEV_ECOSYSTEM_AWS_US_EAST_2_CONSUMER"
engine_size = "HIGHMEM_X64_S"
use_direct_access = false
""")

# 2. Get Data and Create Schema
print("Connecting to Snowflake to set up tables...")
provider = rai.Provider()

SAMPLE_DATA_DB = "SNOWFLAKE_SAMPLE_DATA"
TUTORIAL_SCHEMA = "RAI_TUTORIAL.TPCDS"
TUTORIAL_DB = TUTORIAL_SCHEMA.split(".")[0]

sql_command = f"""
BEGIN
    CREATE DATABASE IF NOT EXISTS {TUTORIAL_DB};
    CREATE SCHEMA IF NOT EXISTS {TUTORIAL_SCHEMA};

    -- Create a sample store_sales table
    CREATE TABLE IF NOT EXISTS {TUTORIAL_SCHEMA}.STORE_SALES AS
    WITH date_dim AS (
        SELECT *
        FROM {SAMPLE_DATA_DB}.TPCDS_SF10TCL.DATE_DIM
        WHERE d_date BETWEEN '2001-01-01' AND '2001-12-31'
    ),
    store AS (
        SELECT *
        FROM {SAMPLE_DATA_DB}.TPCDS_SF10TCL.STORE
        LIMIT 1
    )
    SELECT ss_customer_sk, ss_item_sk
    FROM {SAMPLE_DATA_DB}.TPCDS_SF10TCL.STORE_SALES ss
    JOIN date_dim dd ON ss.ss_sold_date_sk = dd.d_date_sk
    JOIN store st ON ss.ss_store_sk = st.s_store_sk;
    ALTER TABLE {TUTORIAL_SCHEMA}.STORE_SALES SET CHANGE_TRACKING = TRUE;

    -- Create a sample item table
    CREATE TABLE IF NOT EXISTS {TUTORIAL_SCHEMA}.ITEM AS
    SELECT i_item_sk, i_category, i_class
    FROM {SAMPLE_DATA_DB}.TPCDS_SF10TCL.ITEM i
    JOIN {TUTORIAL_SCHEMA}.STORE_SALES ss ON i.i_item_sk = ss.ss_item_sk;
    ALTER TABLE {TUTORIAL_SCHEMA}.item SET CHANGE_TRACKING = TRUE;
END;
"""

provider.sql(sql_command)
print("âœ… Data setup complete!")